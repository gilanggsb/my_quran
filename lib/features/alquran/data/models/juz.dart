import 'dart:convert';

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:hive_ce/hive.dart';

import '../../../../common/common.dart';

part 'juz.freezed.dart';
part 'juz.g.dart';

Juz juzFromJson(String str) => Juz.fromJson(json.decode(str));

String juzToJson(Juz data) => json.encode(data.toJson());

@Freezed(fromJson: false, toJson: false)
@HiveType(typeId: 1) // Assign a unique typeId for Hive
@JsonSerializable(fieldRename: FieldRename.snake)
class Juz with _$Juz {
  const Juz._();

  const factory Juz({
    @HiveField(0) String? ayatArab,
    @HiveField(1) String? ayatIndo,
    @HiveField(2) String? ayatLatin,
    @HiveField(3) String? name,
    @HiveField(4) String? nameEndArab,
    @HiveField(5) String? nameEndId,
    @HiveField(6) String? nameStartArab,
    @HiveField(7) String? nameStartId,
    @HiveField(8) @StringToIntConverter() int? number,
    @HiveField(9) String? surahIdEnd,
    @HiveField(10) String? surahIdStart,
    @HiveField(11) String? verseEnd,
    @HiveField(12) String? verseStart,
  }) = _Juz;

  // Custom fromJson method generated by Freezed
  factory Juz.fromJson(Map<String, dynamic> json) => _$JuzFromJson(json);

  // Custom toJson method generated by Freezed
  Map<String, dynamic> toJson() => _$JuzToJson(this);
}
